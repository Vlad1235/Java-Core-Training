//package Cycles.old;
//
//public class OperatorBreak {
//    /*
//    Выполнение цикла можно прервать, ВНУТРИ ТЕЛА ЦИКЛА вызвать оператор break.
//    После выполнения оператора break произойдет моментальный выход из цикла (не будет окончена
//    даже текущая итерация).
//    Управление передастся оператору, СЛЕДУЮЩЕМУ ЗА ЦИКЛОМ.
//     */
//    /*
//    В следующем примере реализован поиск символа в строке.
//    Оператор break используется для выхода из цикла for.
//    В цикле происходит прохождение всех символов строки (с первого по последний) и
//    сравнение с искомым символом.
//    В случае нахождения нужного символа нет смысла просматривать
//     оставшуюся часть строки, тем самым продолжая цикл,
//     поэтому имеет смысл использовать оператор break,
//      как только символ будет найден.
//     */
//    public void operatorBreak1() {
//
//        int i;
//        //строка для поиска
//        String searchMe = "мама мыла раму";
//        //количество символов в строке
//        int max = searchMe.length();
//        //символ, который нужно найти в строке
//        char symb = 'ы';
//            //переключатель найдено/не найдено
//        boolean find = false;
//
//        for (i = 0; i < max; i++) {
//            // если символ на позиции i в строке равен искомому символу
//            if (searchMe.charAt(i) == symb) {
//                //переключаемся в режим "найдено" и выходим из цикла
//                find = true;
//                break;
//            }
//        }
//        // Оператор break переводит к следующему оператору System.out.print();
//        // выводим соответствующее сообщение: найден или не найден символ
//        if (find) {
//            System.out.println("Символ " + symb + " найден");
//        } else {
//            System.out.println("Символ " + symb + " не найден");
//        }
//    }
//}
//
//
////Метод length() — возвращает длину строки в Java. Длина равна числу 16-разрядных символов Юникода в строке.
////Метод charAt() — возвращает символ, расположенный по указанному индексу строки. Индексы строк в Java начинаются с нуля
//// i в данном примере можно понять как набор символов, в котором будет поиск
////