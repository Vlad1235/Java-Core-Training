package Cycles.old;

public class CycleWhile {
/*
    //Конструкция while выполняет выражение в фигурных скобках ДО ТЕХ ПОР ПОКА параметр логическое_выражение  имеет истинное значение (true).
    // Этот параметр является условием выполнения цикла.
    // В выше приведенном примере, логическое выражение имеет вид  i < 11.
    //Истинность логического  выражения (условия) проверяется перед каждым шагом цикла, в том числе и перед первым.
    // while так же называют оператором предусловия.

    //Конструкция while имеет следующий вид:
    //инициализация переменной;
    //while(логическое_выражение) {
     // i=i+1;
    //тело цикла;
    //}
 */

    public void cycleWhile1 (){
        // Пример: Вывод на экран значений от i=11 до i=19. "i=" так как мы сами указали
        int i = 11;
        while(i < 20){
            System.out.println("i= " + i);
            i++;
        }

        /*
         Если просто набор цифр от 11 до 19 в столбик
        int i = 11;
        while(i < 20){
            System.out.println(i);
            i++;
         */

        }
    }

    /*
        Приведем пример цикла, который не выполнится ни разу: (потом мы заставим его выполнится через оператор do-while
   int i = 5;
    while(i > 6) {
         System.out.print(i);
          i++;
       }

 Пример: Для реализации бесконечного цикла, в качестве параметра достаточно указать true
while(true) {
    тело цикла
 }
     */
