package Arrays.arrays2;

public class Matrix {
    /*
    Матрица A имеет размерность 2 на 3 (2 строки, 3 столбца). Создадим двухмерный массив этой размерности:
     */
    public void matrix1() {
        /*
        Мы объявили двумерный массив целых чисел (поскольку матрица в данном случае содержит целые числа) и
         зарезервировали для него память.
         Для этого мы использовали 2 индекса: первый индекс определяет строку и ее размер,
         второй индекс определяет столбец и его размер.
         */
        int [][] matrizaA;
        matrizaA = new int[2][3];
/*
        Присваиваем заначения. Помним, что Для доступа к элементам двумерного массива необходимо использовать
        2 индекса: первый для строки, второй – для столбца.
        Как и в случае с одномерными массивами, индексы также начинаются с нуля.
        Поэтому нумерация строк и столбцов в таблице начинается с 0.
 */
        matrizaA[0][0] = 1;
        matrizaA[0][1] = -2;
        matrizaA[0][2] = 3;
        matrizaA[1][0] = 4;
        matrizaA[1][1] = 1;
        matrizaA[1][2] = 7;

        /*
        Для того, чтобы вывести матрицу на консоль, нужно пройти все элементы, используя два цикла.
        Количество циклов, при прохождении элементов массива, равно его размерности.
        В нашем случае первый цикл осуществляется по строкам, второй — по столбцам.
         */
        for( int i =0; i<2; i++){
            for( int j = 0; j <3; j++){
                System.out.print(matrizaA[i][j] + " "); // сначала выводим все элементы первой строки, отделяя их символом табуляции "\t",или просто " ".
            }
                System.out.println(); //После заверщения первого вложенного цикла переносим строку и "ждем" завершения следующего.важно прописать иначе все значения обеих строк будут подрят в одной строке
        }
    }
}
// "\t"  не забывать прописывать, или просто " "
/*
1	-2	3
4	1	7
 */

/*
 В принципе можно сравнить вложенные циклы с написанием буквы Z. слева направно вниз и снова слева направо
 */