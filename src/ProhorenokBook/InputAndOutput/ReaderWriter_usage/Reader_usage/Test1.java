package ProhorenokBook.InputAndOutput.ReaderWriter_usage.Reader_usage;

/**
 * Абстрактный класс Reader является базовым для символьных потоков ввода(чтения из файла)
 * методы:
 * read() - читать данные из потока
 *  int read() throws IOException - читает из потока по одному символу за раз! и возвращает его код. Если достигнут конец потока, то вернет -1
 *  int read(char[] cbuf, int off, int len) throws IOException - читает из потока len символов и записывает их в массив cbuf, начиная с индекса off. Возвращает количество прочтенных символов или -1, если достигнут конец потока.
 *  int read(char[] cbuf) throws IOException - читает из потока за раз! количество символов равное размеру массива, и записывает их в массив cbuf. Метод возвращает количество прочтенных символов или значение -1, если достигнут конец потока.
 *  int read(CharBuffer target) throws IOException - читает из потока количество символов, равное размеру объекта target, и записывает их в объект target.
 *
 *  ready() - возвращает true, если поток содержит символы, которые могут быть прочитаны методом read() без блокировки.
 *
 *  skip() - пропускает указанное значение символов и возвращает фактическое количество прорущенных символов
 *
 *  transerTo() - читает все символы из потока ввода и записывает их в поток вывода. Метод доступен с Java 10
 *
 *  close() - закрывает поток и освобождает ресурсы.
 */
public class Test1 {
}
