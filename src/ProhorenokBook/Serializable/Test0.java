package ProhorenokBook.Serializable;

/**
 * Мы научились сохранять/считывать в файл значения элементарных типов, с помощью FileInputStream (считывать) и FileOutputStream (записывать)
 * С помощью классов ObjectOutputStream или ObjectInputStream мы можем, помимо элементраных типов, сохранять и читать данные объектных типов.
 * Процесс сохранения объектов называется СЕРИАЛИЗАЦИЕЙ.
 * Однако сохранение возможно НЕ ВСЕХ ОБЪЕКТОВ, а только объектов, классы которых реализуют интерфейс Serializable. Этот интейрфейс не содрежит методов.
 * Если бы можно было сохранять любые объекты, то значения приватных полей можно было перезаписать перед восстановлением объектов.
 * Счтатические члены класса принадлежат классу, а не экземпляру класса и сериализации не принадлежат!
 * Если нужно ограничить сериализацию отдельных полей( например содержащих ссылки на другие ресурсы, или пароли), то при
 * объявлении поля необходимо указать ключевое слово transient. Например, если мы хотим, чтобы пароль НЕ БЫЛ СЕРИАЛИЗОВАН, то private transient String password;
 * При восстановлении экземпляра класса такие поля получат значения по умолчанию. В случание с String password получит null
 * При сериализации происходит сохранение всей иерархии наследования классов. Если нужно предотвратить это, то внутри класса нужно определить методы writeObject(), readObject()
 */
public class Test0 {
}
