package ProhorenokBook.Collections.LinkedList_usage;

import java.util.Collections;
import java.util.LinkedList;
import java.util.List;

/**
 *  LinkedList<E> - связанный список, элементы хранят ссылки на предыдуший и последующий элементы.
 *  Вставка и удаление - быстро, надо лишь изменить ссылки, в отличие от АррауЛиста где нужно перемещать элементы.
 *  Однако, доступ к элементам осуществляется медленно, так как приходится каждый раз искать элемент с начала или конца списка
 *  Связанный список не содержит индексов
 *  Можно реализовать очередь
 *  Можно хранить элементы null
 *  В связанном списке нет понятия емкость
 *  Свявзанный список НЕ ЯВЛЯЕТСЯ МАССИВОМ и элементы могут быть расположены как угодно
 *  Каждый элемент содержит ссылку на предыдущий и последующий элементы
 *  Каждый раз когда я указываю индекс, производится поиск элемента с начала или конца списка, а не используется прямой доступ как в ArrayList
 */
public class Test1 {
    public static void main(String[] args) {
        /*
        Важно!
        При использовании метода remove() следует учитывать, что простое указание числа в качестве параметра означает индекс удаляемого элемента.
        Чтобы удалить именно число, необходимо указать объект класса Integer
         */
        List<Integer> arr0 = new LinkedList<>();
        Collections.addAll(arr0,1,5,3,2);
        // Удаляем элемент с индексом 2
        System.out.println(arr0.remove(2));
        System.out.println(arr0.toString()); // [1, 5, 2]
        // удаляем элемент со значением 2
        System.out.println(arr0.remove(Integer.valueOf(2)));
        System.out.println(arr0.toString()); // [1, 5]

    }
}
