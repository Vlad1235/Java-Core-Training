package ProhorenokBook.Collections.Map_usage;

import java.util.Map;

/**
 * Интерфейс Map<K,V> описывает структуру данныйх, называемыех ассоциативным массивом(СЛОВАРЕМ).
 * Доступ к элементам такой структуры осуществляется не по индексу, а по уникальному ключу. Чтобы получить доступ к элементу нужно указать ключ, который использовался при сохранении элемента
 * Для быстрого поиска ключа используется Хэш-таблица, поэтому обязательно переопределение методов equals(), hashCode(), если использовать объект как ключ.
 *
 * Интерфейс Map<K,V> реализует следующие классы:
 * 1. HashMap - словарь, ключи расположены в произвольном порядке
 * 2. LinkedHashMap - словарь, в котором запоминается порядок вставки элемента или порядок доступа к ним.
 * 2. TreeMap - словарь, ключи хранятся в отсортированном порядке в соответствии с алгоритмом "красное-черное дерево". Не используется Хеш-таблица
 * 3. Hashtable - в отличие от HashMap этот словарь синхронизированный и может использоваться из разных потоков
 * 4. Properties - словарь, состоящий из конфигурационных данных. Ключи и значения являются строками. КЛасс позволяет загрузить данные из файла или сохранить в файл.
 *
 * 2 основых метода:
 *
 * getKey() - возвращает ключ
 * getValue() - возвращает значение
 *
 *
 */
public class Test {
    public static void main(String[] args) {
        Map.Entry<String, Integer> obj = Map.entry("a",10);
        System.out.println(obj.getKey());
        System.out.println(obj.getValue());
        System.out.println(obj.toString());
    }
}
/*
a
10
a=10
 */