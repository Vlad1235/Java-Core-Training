package Algorythms.Sort.sort1;

public class SelectionSort {
    /*
    НАзвание алгоритма = СОРТИРОВКА ВЫБОРОМ!
    найти минимальный элемент и поменять его местами с начальным,
    потом, в оставшейся части массива (кроме первого элемента),
    найти снова минимальный элемент и поменять его со вторым элементом и т.д.
    Такой алгоритм называется Сортировка выбором. Рассмотрим его подробнее.


В ПРИМЕРЕ ОНА ПРИВЕЛА АЛГОРИТМ КАК ОТДЕЛЬНУЮ ФУНЦИЮ РАСЧЕТА, ЧТОбы потом можно было на этот алгоритм ссылаться и в итоге
 воспользуемся вышеприведенными алгоритмами сортировки:

System.out.print("\n");
bubbleSort(arr);
for(int i = 0; i <  arr.length; i++) {
	System.out.print(arr[i] + "  ");
}

    public static void selectionSort(int[] arr){
    /*По очереди будем просматривать все подмножества
      элементов массива (0 - последний, 1-последний,
      2-последний,...)
    for (int i = 0; i < arr.length; i++) {
        /*Предполагаем, что первый элемент (в каждом
           подмножестве элементов) является минимальным
        int min = arr[i];
        int min_i = i;
        /*В оставшейся части подмножества ищем элемент,
           который меньше предположенного минимума
        for (int j = i+1; j < arr.length; j++) {
            //Если находим, запоминаем его индекс
            if (arr[j] < min) {
                min = arr[j];
                min_i = j;
            }
        }
        /*Если нашелся элемент, меньший, чем на текущей позиции,
          меняем их местами
        if (i != min_i) {
            int tmp = arr[i];
            arr[i] = arr[min_i];
            arr[min_i] = tmp;
        }
    }
 }
  */

    public void selectionSort1() {
        int[] arr = {62, 84, 32, 5, 0, 14, 52, 82, 58, 71};

        for (int i = 0; i < arr.length; i++) {
            int min = arr[i];
            int min_i = i;
            for (int j = i + 1; j < arr.length; j++) {
                if (arr[j] < min) {
                    min = arr[j];
                    min_i = j;
                }
            }
            if (i != min_i) {
                int tmp = arr[i];
                arr[i] = arr[min_i];
                arr[min_i] = tmp;
            }
        }
        for (int i =0; i < arr.length; i++){
            System.out.print(arr[i] + " ,");
        }
    }
}


/*
 Вместо фиксированного массива мы можем создать массив случайных чисел состоящий из 10 элементов
int arr[] = new int[10];
for(int i = 0; i < arr.length; i++) {
    //элементу массива присваивается случайное число от 0 до 99
    arr[i] = (int)(Math.random() * 100);
    System.out.print(arr[i] + "  ");
}
 */